import{_ as a,c as s,o as e,S as n}from"./chunks/framework.9c4db3f7.js";const D=JSON.parse('{"title":"Canvas","description":"","frontmatter":{},"headers":[],"relativePath":"notes/6.md","filePath":"notes/6.md","lastUpdated":1729562716000}'),l={name:"notes/6.md"},t=n(`<h1 id="canvas" tabindex="-1">Canvas <a class="header-anchor" href="#canvas" aria-label="Permalink to &quot;Canvas&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">原文地址</p><p><a href="https://github.com/tangxve/notes/issues/6" target="_blank" rel="noreferrer">canvas 工具方法 | GitHub</a></p></div><p>原文 <a href="https://github.com/tangxve/canvasUtils" target="_blank" rel="noreferrer">canvas 工具方法</a></p><p><a href="https://www.runoob.com/tags/ref-canvas.html" target="_blank" rel="noreferrer">canvas 参考手册</a></p><p>常用的 canvas 方法</p><h2 id="功能" tabindex="-1">功能 <a class="header-anchor" href="#功能" aria-label="Permalink to &quot;功能&quot;">​</a></h2><ul><li>初始化画布 initCanvasContext</li><li>绘制直线 drawLine</li><li>绘制填充矩形 drawfillRect</li><li>绘制矩形边框 drawStrokeRect</li><li>绘制圆角矩形</li><li>绘制圆环 drawStrokeCircle</li><li>绘制圆形 drawFillCircle</li><li>绘制文字 drawText</li><li>绘制多行文字 drawWrapText</li></ul><h2 id="使用" tabindex="-1">使用 <a class="header-anchor" href="#使用" aria-label="Permalink to &quot;使用&quot;">​</a></h2><p>下载依赖：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">npm</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">i</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><p>运行：</p><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#FFCB6B;">yarn</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">start:dev</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><h3 id="初始化画布-initcanvascontext" tabindex="-1">初始化画布 initCanvasContext <a class="header-anchor" href="#初始化画布-initcanvascontext" aria-label="Permalink to &quot;初始化画布 initCanvasContext&quot;">​</a></h3><p><code>initCanvasContext(options&lt;Object&gt;)</code></p><ul><li>options属性： <ul><li>canvas：<code>&lt;HTMLCanvasElement&gt;</code> canvas 元素</li><li>width： <code>&lt;number&gt;</code> 宽度</li><li>height：<code>&lt;number&gt;</code> 高度</li><li>ratio：<code>&lt;number&gt;</code> 渲染比例，如果不传默认获取 <code>window.devicePixelRatio</code></li></ul></li><li>返回值：<code>&lt;CanvasRenderingContext2D&gt;</code> canvas 实例</li></ul><h2 id="其他" tabindex="-1">其他 <a class="header-anchor" href="#其他" aria-label="Permalink to &quot;其他&quot;">​</a></h2><h3 id="高清绘制" tabindex="-1">高清绘制 <a class="header-anchor" href="#高清绘制" aria-label="Permalink to &quot;高清绘制&quot;">​</a></h3><p>canvas 绘制不是矢量图，在高分辨率下要缩放处理</p><p>根据 DPR 等比缩放</p><ol><li>根据 设备 dpr 等比 放大 canvas</li><li>在从 css 里设置为原来的宽高</li><li>考虑到 内容的缩放，因此 也需要将 ctx 缩放</li></ol><h3 id="获取-dpr" tabindex="-1">获取 dpr <a class="header-anchor" href="#获取-dpr" aria-label="Permalink to &quot;获取 dpr&quot;">​</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#A6ACCD;">window</span><span style="color:#89DDFF;">.</span><span style="color:#A6ACCD;">devicePixelRatio  </span><span style="color:#676E95;font-style:italic;">// 2</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br></div></div><div class="language-html line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">canvas</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">id</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">myCanvass</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">width</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1200</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">height</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">1000</span><span style="color:#89DDFF;">&#39;</span></span>
<span class="line"><span style="color:#89DDFF;">        </span><span style="color:#C792EA;">style</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&#39;</span><span style="color:#C3E88D;">width: 600px; height: 500px;</span><span style="color:#89DDFF;">&#39;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">canvas</span><span style="color:#89DDFF;">&gt;</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>相当于 在 600 的物理像素里面，显示了 1200 真实像素</p>`,24),o=[t];function i(p,r,c,d,h,u){return e(),s("div",null,o)}const b=a(l,[["render",i]]);export{D as __pageData,b as default};
