import{_ as e,c as t,o as a,S as o}from"./chunks/framework.9c4db3f7.js";const f=JSON.parse('{"title":"高性能渲染十万条数据","description":"","frontmatter":{},"headers":[],"relativePath":"notes/17.md","filePath":"notes/17.md","lastUpdated":1703557805000}'),r={name:"notes/17.md"},i=o('<h1 id="高性能渲染十万条数据" tabindex="-1">高性能渲染十万条数据 <a class="header-anchor" href="#高性能渲染十万条数据" aria-label="Permalink to &quot;高性能渲染十万条数据&quot;">​</a></h1><div class="tip custom-block"><p class="custom-block-title">原文地址</p><p><a href="https://github.com/tangxve/notes/issues/17" target="_blank" rel="noreferrer">高性能渲染十万条数据 | GitHub</a></p></div><ul><li><p><a href="https://mp.weixin.qq.com/s/-UHOsR26jnnogHqPfPM0rQ" target="_blank" rel="noreferrer">时间分片</a></p></li><li><p><a href="https://mp.weixin.qq.com/s/8uttkBw-dwYXsybKePQ3nA" target="_blank" rel="noreferrer">虚拟列表</a></p></li><li><p>最粗暴的做法（一次性渲染）</p></li><li><p>使用定时器 <code>setTimeout</code> 分片渲染</p></li><li><p>使用 <code>requestAnimationFrame</code> 分片渲染</p></li><li><p>使用 <code>DocumentFragment (文档片段)</code> 减少 回流 和 把样式表的计算推迟到脚本执行之后（直接 append 到 document 元素的样式表的计算是同步发生的）</p></li><li><p>使用虚拟列表(不要使用 虚拟dom，性能差，会走diff)</p></li></ul>',3),s=[i];function n(l,c,p,d,_,m){return a(),t("div",null,s)}const h=e(r,[["render",n]]);export{f as __pageData,h as default};
