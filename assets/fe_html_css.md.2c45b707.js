import{_ as s,c as a,o as l,S as n}from"./chunks/framework.9c4db3f7.js";const b=JSON.parse('{"title":"css 相关","description":"","frontmatter":{},"headers":[],"relativePath":"fe/html/css.md","filePath":"fe/html/css.md","lastUpdated":1704332738000}'),e={name:"fe/html/css.md"},p=n(`<h1 id="css-相关" tabindex="-1">css 相关 <a class="header-anchor" href="#css-相关" aria-label="Permalink to &quot;css 相关&quot;">​</a></h1><h2 id="bfc" tabindex="-1">BFC <a class="header-anchor" href="#bfc" aria-label="Permalink to &quot;BFC&quot;">​</a></h2><h2 id="说下-flex" tabindex="-1">说下 flex <a class="header-anchor" href="#说下-flex" aria-label="Permalink to &quot;说下 flex&quot;">​</a></h2><p><a href="https://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noreferrer">Flex 布局教程：语法篇</a></p><h3 id="面试" tabindex="-1">面试： <a class="header-anchor" href="#面试" aria-label="Permalink to &quot;面试：&quot;">​</a></h3><p><code>flex: 1;</code> 标示什么：</p><p><a href="https://www.zhangxinxu.com/wordpress/2020/10/css-flex-0-1-none/" target="_blank" rel="noreferrer">flex:0 flex:1 flex:none flex:auto应该在什么场景下使用？</a></p><p><a href="https://zhuanlan.zhihu.com/p/136223806" target="_blank" rel="noreferrer">flex:1 到底代表什么?</a></p><ul><li>所有元素会均分</li></ul><p><code>flex: 1; === flex: 1 1 任意数字+任意长度单位;</code></p><ul><li><p>可以看出最重要的一点在 第三个参数 flex-basis 上, 我们再来回顾以下 这个属性的作用</p></li><li><p>flex-basis给上面两个属性分配多余空间之前, 计算项目是否有多余空间, 默认值为 auto, 即项目本身的大小</p></li><li><p>auto 为表示项目本身的大小, 如果设置为 auto, 那么这三个盒子就会按照自己内容的多少来等比例的放大和缩小, 所以出现了上图中三个盒子不一样大的情况</p></li><li><p>那我们如果随便设置一个其他带有长度单位的数字呢, 那么他就不会按项目本身来计算, 所以它不关心内容, 只是把空间等比收缩和放大</p></li></ul><h3 id="flex-grow" tabindex="-1">flex-grow <a class="header-anchor" href="#flex-grow" aria-label="Permalink to &quot;flex-grow&quot;">​</a></h3><ul><li>flex-grow 属性定义项目的放大比例，<code>默认为0</code>，即如果存在剩余空间，也不放大。</li><li>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</li><li>flex-grow 值越大是前者的一倍</li></ul><h3 id="flex-shrink属性" tabindex="-1">flex-shrink属性 <a class="header-anchor" href="#flex-shrink属性" aria-label="Permalink to &quot;flex-shrink属性&quot;">​</a></h3><ul><li><code>flex-shrink</code> 属性定义了项目的缩小比例，<code>默认为1</code>，即如果空间不足，该项目将缩小。</li><li>如果所有项目的<code>flex-shrink</code>属性都为1，当空间不足时，都将等比例缩小。</li><li>如果一个项目的 <code>flex-shrink</code> 属性为0，其他项目都为1，则空间不足时，前者不缩小。</li><li>优先缩小值大的</li></ul><h3 id="flex-basis属性" tabindex="-1">flex-basis属性 <a class="header-anchor" href="#flex-basis属性" aria-label="Permalink to &quot;flex-basis属性&quot;">​</a></h3><p><code>flex-basis</code> 属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</p><ul><li>它可以设为跟 <code>width</code> 或 <code>height</code> 属性一样的值（比如350px），则项目将占据固定空间。</li></ul><h3 id="flex属性" tabindex="-1">flex属性 <a class="header-anchor" href="#flex属性" aria-label="Permalink to &quot;flex属性&quot;">​</a></h3><ul><li>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</li><li>该属性有两个快捷值： <ul><li><code>flex: auto;</code> ：(1 1 auto)</li><li><code>flex: none;</code> (0 0 auto)。</li></ul></li></ul><h2 id="绘制三角形" tabindex="-1">绘制三角形 <a class="header-anchor" href="#绘制三角形" aria-label="Permalink to &quot;绘制三角形&quot;">​</a></h2><ul><li>当 border 足够宽的时候，图形就有4个三角形拼凑而成</li><li>给其他的 3 个图形设置透明色</li></ul><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">#</span><span style="color:#F78C6C;">demo</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">width</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">height</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0px</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#676E95;font-style:italic;">/* 其他设置成 透明色 */</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border-left</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">40px</span><span style="color:#A6ACCD;"> solid transparent</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border-right</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">40px</span><span style="color:#A6ACCD;"> solid transparent</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">border-bottom</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">40px</span><span style="color:#A6ACCD;"> solid red</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br></div></div><h2 id="垂直水平局中" tabindex="-1">垂直水平局中 <a class="header-anchor" href="#垂直水平局中" aria-label="Permalink to &quot;垂直水平局中&quot;">​</a></h2><p>1、知道元素宽高</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> auto</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin-top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">;</span><span style="color:#A6ACCD;"> // 元素高度</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>2、不知道元素宽高</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">margin</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">0</span><span style="color:#A6ACCD;"> auto</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">position</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> relative</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">top</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#F78C6C;">50%</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">transform</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> </span><span style="color:#82AAFF;">translateY</span><span style="color:#89DDFF;">(</span><span style="color:#F78C6C;">-50%</span><span style="color:#89DDFF;">)</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><p>3、flex 布局</p><div class="language-css line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki material-theme-palenight"><code><span class="line"><span style="color:#89DDFF;">.</span><span style="color:#FFCB6B;">div</span><span style="color:#A6ACCD;"> </span><span style="color:#89DDFF;">{</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">display</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> flex</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">align-items</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#A6ACCD;">  </span><span style="color:#B2CCD6;">justify-content</span><span style="color:#89DDFF;">:</span><span style="color:#A6ACCD;"> center</span><span style="color:#89DDFF;">;</span></span>
<span class="line"><span style="color:#89DDFF;">}</span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="position-定位" tabindex="-1">position 定位 <a class="header-anchor" href="#position-定位" aria-label="Permalink to &quot;position 定位&quot;">​</a></h2><ul><li>static：默认属性，static 定位所导致的元素位置，是浏览器自主决定的，所以这时top、bottom、left、right这四个属性无效。</li><li>relative：相对定位，</li><li>fixed</li><li>absolute</li><li>sticky</li></ul><p>元素相对最近的 position 为 absolute / relative / fixed 的祖先元素</p><h2 id="重绘和回流" tabindex="-1">重绘和回流 <a class="header-anchor" href="#重绘和回流" aria-label="Permalink to &quot;重绘和回流&quot;">​</a></h2><p><strong>回流：</strong></p><blockquote><p>当render tree中的一部分(或全部)因为元素的规模尺寸，布局，隐藏等改变而需要重新构建。</p></blockquote><p>回流必将引起重绘，而重绘不一定引起回流</p><ol><li>尺寸、位置、显示、隐藏 <code>dispaly:none/block</code> 发生了改变的时候，导致页面需要重新构建，</li><li>添加或删除可见的 dom 元素</li></ol><p><strong>重绘：</strong></p><p>当元素的某些样式，比如背景色、border颜色发生变化时，但不影响页面布局，这就是重绘；</p><p>优化方法：</p><p>1.给 dom 添加 class，而不是修改样式 2.如果需要对dom进行多次样式修改，也可以先将dom隐藏掉，修改完在显示出来（这样只产生两次回流：显示、隐藏）</p>`,42),o=[p];function r(t,c,i,C,D,d){return l(),a("div",null,o)}const u=s(e,[["render",r]]);export{b as __pageData,u as default};
